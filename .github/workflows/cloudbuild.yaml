name: ci
on:
  push:
    pull_request: [develop]
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Login to ghcr
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Setup gcloud CLI
        uses: google-github-actions/setup-gcloud@v0
        with:
          project_id: ${{ secrets.GCP_PROJECT_ID }}
          service_account_key: ${{ secrets.GCP_SA_KEY }}
          export_default_credentials: true
      - name: Generate service-account-storage.json
        run: |-
          gcloud kms decrypt \
          --ciphertext-file=./backend/storage/credentials/google/service-account-storage.json.enc \
          --plaintext-file=./backend/storage/credentials/google/service-account-storage.json \
          --location=global \
          --keyring=testing \
          --key=service-account
      - name: "Rodando docker-compose"
        run: docker-compose -f docker-compose.prod.yaml up -d app db redis nginx
        env:
          GOOGLE_CLOUD_PROJECT_ID: $PROJECT_ID
          GOOGLE_CLOUD_KEY_FILE: service-account-storage.json
          GOOGLE_CLOUD_STORAGE_BUCKET: bampli-video
          GOOGLE_CLOUD_STORAGE_API_URI: https://storage.googleapis.com/bampli-video
          TESTING_PROD: true

      # - name: "Chown in /var/www"
      #   run: docker exec -u root -t micro-videos-app chown -R www-data:www-data /var/www
      
      # - name: "Rodando composer"
      #   run: docker exec -t micro-videos-app composer install --no-interaction -d /var/www

      # - name: "Copiando backend .env"
      #   run: docker exec -t micro-videos-app cp .env.example /var/www/.env

      # - name: "Copiando backend .env.testing"
      #   run: docker exec -t micro-videos-app cp .env.testing.example /var/www/.env.testing

      # - name: "Rodando key:generate"
      #   run: docker exec -t micro-videos-app php /var/www/artisan key:generate

      # - name: "Rodando migrations"
      #   run: docker exec -t micro-videos-app php /var/www/artisan migrate

      - name: "Waiting php-fpm"
        run: docker-compose -f docker-compose.prod.yaml up dockerize

      - name: "Rodando Phpunit"
        run: docker exec -t micro-videos-app php /var/www/backend/vendor/bin/phpunit -c /var/www/backend/phpunit.xml

      # - name: "Copiando frontend .env"
      #   run: docker exec -t micro-videos-app cp /var/www/frontend/.env.example /var/www/frontend/.env

      # - name: Install front-end
      #   run: docker exec -t micro-videos-app npm install  --prefix  /var/www/frontend

      # - name: Permission on scripts/build.sh
      #   run: docker exec -t micro-videos-app chmod +x /var/www/frontend/scripts/build.sh

      # - name: Build front-end
      #   run: docker exec -t micro-videos-app npm run  build-laravel --prefix  /var/www/frontend

      # - name: Test Laravel and React integration
      #   run: docker exec -w /var/www -t micro-videos-app php artisan dusk  --env=testing
